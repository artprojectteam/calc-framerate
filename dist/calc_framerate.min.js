/*!
Calculating Frame Rate v0.0.1
Calculating frame rate at used by requestAnimationFrame
Copyright (c) 2017 Nobuyuki Kondo
License: MIT

https://github.com/artprojectteam/calc-framerate
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.CalcFrameRate=t()}(this,function(){"use strict";!function(){function e(e){this.value=e}function t(t){function n(r,i){try{var u=t[r](i),s=u.value;s instanceof e?Promise.resolve(s.value).then(function(e){n("next",e)},function(e){n("throw",e)}):o(u.done?"return":"normal",u.value)}catch(e){o("throw",e)}}function o(e,t){switch(e){case"return":r.resolve({value:t,done:!0});break;case"throw":r.reject(t);break;default:r.resolve({value:t,done:!1})}(r=r.next)?n(r.key,r.arg):i=null}var r,i;this._invoke=function(e,t){return new Promise(function(o,u){var s={key:e,arg:t,resolve:o,reject:u,next:null};i?i=i.next=s:(r=i=s,n(e,t))})},"function"!=typeof t.return&&(this.return=void 0)}"function"==typeof Symbol&&Symbol.asyncIterator&&(t.prototype[Symbol.asyncIterator]=function(){return this}),t.prototype.next=function(e){return this._invoke("next",e)},t.prototype.throw=function(e){return this._invoke("throw",e)},t.prototype.return=function(e){return this._invoke("return",e)}}();var e=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},t=window.performance&&(performance.now||performance.mozNow||performance.oNow||performance.webkitNow);return function(){function n(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:30,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4e3;e(this,n),this._fps=t,this._start=this._getTime(),this._sheet=o/1e3*this._fps>>0,"number"!=typeof t&&console.error("'"+t+"' is not number. 'fps' must be numeric."),"number"!=typeof o&&console.error("'"+o+"' is not number. 'speed' must be numeric.")}return n.prototype._getTime=function(){return t&&t.call(performance)||(new Date).getTime()},n.prototype.onAsc=function(){var e=this._getTime();return Math.floor((e-this._start)/(1e3/this._fps)%this._sheet)},n.prototype.onDesc=function(){var e=this.onAsc();return Math.floor(this._sheet-1-e)},n}()});
